[{"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/App.tsx":"1","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/styles/global.ts":"2","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/pages/Signin/index.tsx":"3","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/pages/Signin/styles.ts":"4","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Input/index.tsx":"5","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Input/styles.ts":"6","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Button/index.tsx":"7","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Button/styles.ts":"8","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/pages/SignUp/styles.ts":"9","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/pages/SignUp/index.tsx":"10","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Tooltip/index.tsx":"11","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Tooltip/styles.ts":"12","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/utils/getValidationErrors.ts":"13","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/services/api.ts":"14","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/ToastContainer/styles.ts":"15","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/ToastContainer/index.tsx":"16","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/hooks/auth.tsx":"17","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/hooks/toast.tsx":"18","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/ToastContainer/Toast/styles.ts":"19","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/ToastContainer/Toast/index.tsx":"20"},{"size":350,"mtime":1609308774496,"results":"21","hashOfConfig":"22"},{"size":463,"mtime":1609187342654,"results":"23","hashOfConfig":"22"},{"size":2449,"mtime":1609309747180,"results":"24","hashOfConfig":"22"},{"size":1156,"mtime":1609190405749,"results":"25","hashOfConfig":"22"},{"size":1580,"mtime":1609282431941,"results":"26","hashOfConfig":"22"},{"size":1106,"mtime":1609282935007,"results":"27","hashOfConfig":"22"},{"size":316,"mtime":1609189855675,"results":"28","hashOfConfig":"22"},{"size":381,"mtime":1609190421077,"results":"29","hashOfConfig":"22"},{"size":1156,"mtime":1609266654144,"results":"30","hashOfConfig":"22"},{"size":1900,"mtime":1609281514276,"results":"31","hashOfConfig":"22"},{"size":355,"mtime":1609282444445,"results":"32","hashOfConfig":"22"},{"size":743,"mtime":1609283019060,"results":"33","hashOfConfig":"22"},{"size":350,"mtime":1609281404995,"results":"34","hashOfConfig":"22"},{"size":116,"mtime":1609286980525,"results":"35","hashOfConfig":"22"},{"size":162,"mtime":1609310137545,"results":"36","hashOfConfig":"22"},{"size":462,"mtime":1609310495119,"results":"37","hashOfConfig":"22"},{"size":1674,"mtime":1609308519722,"results":"38","hashOfConfig":"22"},{"size":1442,"mtime":1609309882231,"results":"39","hashOfConfig":"22"},{"size":1139,"mtime":1609310335502,"results":"40","hashOfConfig":"22"},{"size":1162,"mtime":1609310801363,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1j52tof",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/App.tsx",["85"],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/styles/global.ts",[],["86","87","88","89","90"],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/pages/Signin/index.tsx",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/pages/Signin/styles.ts",[],["91","92","93","94","95"],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Input/index.tsx",["96"],"import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nimport { useField } from '@unform/core';\nimport { Container, Error } from './styles';\n\nimport Tooltip from '../Tooltip';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const handleInputFocus = useCallback(() => setIsFocused(true), []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFocused={isFocused} isFilled={isFilled}>\n      {Icon && <Icon size={20} />}\n      <input\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Input/styles.ts",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Button/index.tsx",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Button/styles.ts",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/pages/SignUp/styles.ts",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/pages/SignUp/index.tsx",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Tooltip/index.tsx",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/Tooltip/styles.ts",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/utils/getValidationErrors.ts",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/services/api.ts",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/ToastContainer/styles.ts",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/ToastContainer/index.tsx",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/hooks/auth.tsx",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/hooks/toast.tsx",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/ToastContainer/Toast/styles.ts",[],"/home/breno/Documents/Projects/rocketseat/gobarberweb/src/components/ToastContainer/Toast/index.tsx",[],{"ruleId":"97","severity":1,"message":"98","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"101","replacedBy":"111"},{"ruleId":"103","replacedBy":"112"},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","replacedBy":"114"},{"ruleId":"109","replacedBy":"115"},{"ruleId":"97","severity":1,"message":"116","line":14,"column":8,"nodeType":"99","messageId":"100","endLine":14,"endColumn":15},"@typescript-eslint/no-unused-vars","'SignUp' is defined but never used.","Identifier","unusedVar","lines-around-directive",["117"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["117"],[],[],[],[],"'Tooltip' is defined but never used.","padding-line-between-statements"]